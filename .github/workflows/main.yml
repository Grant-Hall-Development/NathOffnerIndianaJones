name: Release

on: [workflow_dispatch]

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  buildAndroid:
    name: Build for Android ðŸ“±
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-Android
          restore-keys: |
            Library-build-
            Library-
      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: Android
          androidAppBundle: true
          androidKeystoreName: user.keystore
          androidKeystoreBase64: ${{ secrets.KEYSTORE_FILE }}
          androidKeystorePass: ${{ secrets.KEYSTORE_PASSWORD }}
          androidKeyaliasName: ${{ secrets.KEYSTORE_ALIAS }}
          androidKeyaliasPass: ${{ secrets.KEYSTORE_ALIAS_PASSWORD }}
      - uses: actions/upload-artifact@v2
        with:
          name: build-Android
          path: build/Android
  releaseToGooglePlay:
    name: Release to the Google Play Store
    runs-on: ubuntu-latest
    needs: buildAndroid
    env:
      GOOGLE_PLAY_KEY_FILE: ${{ secrets.GOOGLE_PLAY_KEY_FILE }}
      GOOGLE_PLAY_KEY_FILE_PATH: ${{ format('{0}/fastlane/google-fastlane.json', github.workspace) }}
      ANDROID_BUILD_FILE_PATH: ${{ format('{0}/build/Android/Android.aab', github.workspace) }}
      ANDROID_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Download Android Artifact
        uses: actions/download-artifact@v2
        with:
          name: build-Android
          path: build/Android
      - name: Add Authentication
        run: echo "$GOOGLE_PLAY_KEY_FILE" > $GOOGLE_PLAY_KEY_FILE_PATH
      - name: Install Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2
          bundler-cache: true
      - name: Upload to Google Play Internal
        uses: maierj/fastlane-action@v2.0.1
        with:
          lane: 'android internal'
      - name: Cleanup to avoid storage limit
        if: always()
        uses: geekyeggo/delete-artifact@v1
        with:
          name: build-Android
  # buildForiOSPlatform:
  #   name: Build for iOS
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/cache@v2
  #       with:
  #         path: Library
  #         key: Library-iOS
  #     - uses: game-ci/unity-builder@v2
  #       with:
  #         targetPlatform: iOS
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: build-iOS
  #         path: build/iOS

  # releaseToAppStore:
  #   name: Release to the App Store
  #   runs-on: macos-latest
  #   needs: buildForiOSPlatform
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2
  #     - name: Download iOS Artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: build-iOS
  #         path: build/iOS
  #     - name: Fix File Permissions and Run Fastlane
  #       env:
  #         APPLE_CONNECT_EMAIL: ${{ secrets.APPLE_CONNECT_EMAIL }}
  #         DEVELOPER_EMAIL: ${{ secrets.DEVELOPER_EMAIL }}
  #         APPLE_DEVELOPER_EMAIL: ${{ secrets.APPLE_DEVELOPER_EMAIL }}
  #         APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
  #         APPLE_TEAM_NAME: ${{ secrets.APPLE_TEAM_NAME }}
  #         MATCH_URL: ${{ secrets.MATCH_URL }}
  #         MATCH_PERSONAL_ACCESS_TOKEN: ${{ secrets.MATCH_PERSONAL_ACCESS_TOKEN }}
  #         MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
  #         APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
  #         APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
  #         APPSTORE_P8: ${{ secrets.APPSTORE_P8 }}
  #         IOS_APP_ID: com.spacemonkeycrypto.spacemonkey
  #         IOS_BUILD_PATH: ${{ format('{0}/build/iOS', github.workspace) }}
  #         PROJECT_NAME: Your Project Name
  #       run: |
  #         find $IOS_BUILD_PATH -type f -name "**.sh" -exec chmod +x {} \;
  #         bundle install
  #         bundle exec fastlane ios beta
  #     - name: Cleanup to avoid storage limit
  #       if: always()
  #       uses: geekyeggo/delete-artifact@v1
  #       with:
  #         name: build-iOS
